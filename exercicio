#hashlib
import hashlib

#mensagem que você deseja garantir a integtridade da informação
data = "Aula 03 da disciplina de segurança da informação"

#hash sha256 ou sha512
hash_object = hashlib.sha256()

#atualizo o objeto com os dados que tenho interesse em transmitir e verificar a integridade
hash_object.update(data.encode('utf-8'))

#obtem o hash em formato de hexadecimal
hash_dex = hash_object.hexdigest()

print(hash_dex)


----------------------------------------------------------------------------------------------------

receiver = "Aula 03 da disciplina de segurança da informação" 

#hashlib
import hashlib

#hash sha256 ou sha512
hash_object = hashlib.sha256()

#atualizo o objeto com os dados que tenho interesse em transmitir e verificar a integridade
hash_object.update(receiver.encode('utf-8'))

#obtem o hash em formato de hexadecimal
hash_dex = hash_object.hexdigest()

print(hash_dex)

if hash_dex == '09cba8ad9c7c5247fe340bbfb76cc63951c7839eaa493889e51fda70a3215713':
  print("Mensagem recebida integra")
else:
  print("Mensagem comprometida")   


--------------------------------------------------------------------------


import hashlib

# nome do meu arquivo
file_name = "artigo.txt"

hash_object = hashlib.sha256()

with open(file_name, 'rb') as file:
    parte = file.read(4096)
    while parte:
        hash_object.update(parte)
        parte = file.read(4096)

hex_digest = hash_object.hexdigest()
print(hex_digest)



-------------------------------------------------------------------------


import hashlib

# Mensagem original
original_message = "Aula 03 da disciplina de segurança da informação"

# Calcula o hash SHA-256 da mensagem original
hash_object = hashlib.sha256()
hash_object.update(original_message.encode('utf-8'))
original_hash = hash_object.hexdigest()

# Simulando a transmissão da mensagem (geralmente, você enviaria a mensagem e o hash)
received_message = "Aula 03 da disciplina de segurança da informação"

# Calcula o hash SHA-256 da mensagem recebida
hash_object = hashlib.sha256()
hash_object.update(received_message.encode('utf-8'))
received_hash = hash_object.hexdigest()

# Verifica se os hashes são iguais
if received_hash == original_hash:
    print("Mensagem recebida integra")
else:
    print("Mensagem comprometida")

# Exemplo de hashing de arquivo
def calculate_file_hash(file_name):
    hash_object = hashlib.sha256()

    with open(file_name, 'rb') as file:
        chunk = file.read(4096)
        while chunk:
            hash_object.update(chunk)
            chunk = file.read(4096)

    return hash_object.hexdigest()

file_name = "artigo.txt"
file_hash = calculate_file_hash(file_name)
print("Hash do arquivo:", file_hash)


